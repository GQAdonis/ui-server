import{e as y}from"./decode-payload.OB5VWwx_.js";import{h as d}from"./has.BWrERxPV.js";import{s as c,p as f}from"./parse-with-big-int.BKSBwM2t.js";import{r as l,a as p,b as m}from"./route-for-api.CuhLNrWg.js";const h=t=>{const e=t.indexOf("["),r=t.indexOf("]");return t.slice(e+1,r).split(" ").filter(a=>a!=="__stack_trace").map(a=>a.endsWith(",")?a.slice(0,a.length-1):a)},g=async(t,e,r)=>(e=await e,{namespace:t,workflowId:e.id,queryType:r});async function u({workflow:t,namespace:e,queryType:r},a=fetch,n){t=await t;const i=await g(e,t,r),s=l("query",i);return await p(s,{options:{method:"POST",body:c({execution:{workflowId:t.id,runId:t.runId},query:{queryType:r}})},request:a,onError:n,notifyOnError:!1})}async function x(t,e=fetch){return new Promise((r,a)=>{u({...t,queryType:"@@temporal-internal__list"},e,n=>{m(n.body)&&n.body.message.includes("@@temporal-internal__list")?r(h(n.body.message)):a(n)})})}async function _(t,e,r,a=fetch){return u(t,a).then(async n=>{const{queryResult:i}=n??{queryResult:{payloads:[]}};let s=i.payloads;try{if(s[0]){const o=await y({attributes:i,namespace:t.namespace,settings:e,accessToken:r});d(o,"payloads")&&Array.isArray(o.payloads)&&(s=o.payloads[0])}return f(s)}catch{return typeof s!="string"?c(s):s}})}async function A(t,e,r){return _({...t,queryType:"__stack_trace"},e,r)}export{x as a,_ as b,A as g};
